---
- name: prelude
  hosts: all
  environment: "{{ os_admin }}"
  tags: prelude
  tasks:
    #- WIP
    #- name: notify users
    #  include_role:
    #    name: hvmnd
    #  vars:
    #    hivemind_hosts: "{{ ansible_play_batch }}"
    #  run_once: true
    #  tags: comms
    - name: stop and lock vms
      include_role:
        name: cloudman
      with_items:
        - hype_list
        - hype_stop
        - hype_lock
      loop_control:
        loop_var: role_action
    - name: stop puppet
      become: yes
      command: /opt/puppetlabs/bin/puppet agent --disable "bionic upgrade"
    - name: stop nova-compute
      become: yes
      systemd:
        name: nova-compute
        state: stopped

- name: hypervisor xenial pre drl
  hosts: all
  tags: pre-drl
  environment: "{{ proxy_env }}"
  tasks:
    #-- @xenial
    - name: remove i386 arch, purge prefs
      include_role:
        name: pacman
      with_items:
        - remove_arch
        - purge_prefs
      loop_control:
        loop_var: role_action
      vars:
        arch: i386
    #-- further cleaning tasks...
    - name: pre-do-release dist upgrade
      include_role:
        name: pacman
      vars:
        role_action: patch_seq
    #-- bchache antics...

- name: hypervisor xenial drl bionic
  hosts: all
  tags: drl
  environment: "{{ proxy_env }}"
  tasks:
    - name: drl
      include_role:
        name: drl

- name: hypervisor bionic post drl
  hosts: all
  environment: "{{ proxy_env }}"
  tags: post-drl
  tasks:
    - name: cleanup xenial sources
      include_role:
        name: pacman
      with_items:
        - purge_sources
      loop_control:
        loop_var: role_action
      vars:
        release: xenial
    - name: routine node config and update puppet
      include_role:
        name: baremetal
      with_items:
        - pre_config
        - reinstall
      loop_control:
        loop_var: role_action
    - name: Update firmware
      include_role:
        name: firmware
      with_items:
        - install
        - update
      loop_control:
        loop_var: role_action
      when: ansible_virtualization_role == 'host'
    - name: Update mlnx
      include_role:
        name: firmware
      vars:
        role_action: mlnx
      when:
        - ansible_p1p1 is defined
        - ansible_p1p1.module is search('mlx')
    #-- bcache antics...

    - name: flush handlers to force reboot
      meta: flush_handlers

    #-- test hypervisor
    #- name: Test "{{ ansible_play_batch }}"
    #  include_role:
    #    name: tempest
    #  vars:
    #    tempest_test_hosts: "{{ ansible_play_batch }}"
    #  run_once: true

- name: prologue
  hosts: all
  environment: "{{ os_admin }}"
  tags: prologue
  tasks:
    - name: Test "{{ ansible_play_batch }}"
      jenkins_build:
        name: "tempest-compute-host-check"
        args:
          CLOUD: "production"
          AVAILABILITY_ZONE: "{{ cell_name }}"
          HOST: "{{ item }}"
        user: "{{ jenkins_username }}"
        password: "{{ jenkins_password }}"
        url: "{{ jenkins_server }}"
      loop: "{{ ansible_play_batch }}"
      run_once: true
      delegate_to: localhost

    - name: stop and lock vms
      include_role:
        name: cloudman
      with_items:
        - hype_unlock
        - hype_start
      loop_control:
        loop_var: role_action
    - name: start puppet
      become: yes
      command: /opt/puppetlabs/bin/puppet agent --enable
    - name: start nova-compute
      become: yes
      systemd:
        name: nova-compute
        state: started
